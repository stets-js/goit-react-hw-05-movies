{"version":3,"file":"static/js/577.114c332f.chunk.js","mappings":"uKACA,MAA4B,6BAA5B,EAAoE,4BAApE,EAA2G,4BAA3G,EAAiJ,2BAAjJ,EAAwL,6BAAxL,EAAoO,gCAApO,EAA+Q,4B,4BCElQA,EAAY,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACnBC,GAAWC,EAAAA,EAAAA,MAGhB,OAAS,eAAIC,UAAWC,EAAf,SACDJ,EAAMK,KAAI,SAAAC,GAAI,OACb,eAAkBH,UAAWC,EAA7B,UACE,UAAC,KAAD,CAAMG,GAAE,kBAAaD,EAAKE,IAAML,UAAWC,EAAcK,MAAO,CAACC,KAAMT,GAAvE,UACGK,EAAKK,aACJ,gBACEC,IAAG,yCAAoCN,EAAKK,aAC5CE,IAAKP,EAAKQ,MACVX,UAAWC,KAGb,gBACED,UAAWC,EACXQ,IAAI,+BACJC,IAAI,WAGR,eAAIV,UAAWC,EAAf,SAA+BE,EAAKQ,SACpC,eAAGX,UAAWC,EAAd,0BACgBE,EAAKS,oBAjBhBT,EAAKE,GADD,KAwBxB,C,yHC/BD,EAA6B,2BAA7B,EAAoE,0BAApE,EAAoG,oB,SCyDpG,EAlDe,WAAO,IAAD,EACnB,GAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOhB,EAAP,KAAciB,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAoCC,EAAAA,EAAAA,MAApC,eAAKC,EAAL,KAAkBC,EAAlB,KACMC,EAAS,UAAGF,EAAYG,IAAI,gBAAnB,QAA+B,GAyB9C,OAPAC,EAAAA,EAAAA,YAAU,WACJF,IACFG,EAAAA,EAAAA,IAAgBH,GAAWI,MAAK,SAAAC,GAAG,OAAIX,EAASW,EAAIC,QAAjB,GAExC,GAAE,CAACN,KAIA,iCACE,kBAAMpB,UAAWC,EAAgB0B,SArBhB,SAAAC,GAEnBA,EAAEC,iBACGd,GAILI,EAAe,CAAEJ,MAAAA,KACjBQ,EAAAA,EAAAA,IAAgBR,GAAOS,MAAK,SAAAC,GAAG,OAAIX,EAASW,EAAIC,QAAjB,IAC/BV,EAAS,KALPc,MAAM,cAMT,EAWG,WACE,kBACE9B,UAAWC,EACX8B,KAAK,OACLC,KAAK,cACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBACZC,MAAOrB,EACPsB,SAlCa,SAAAT,GACnBZ,EAASY,EAAEU,OAAOF,MACnB,KAkCK,mBAAQpC,UAAWC,EAAnB,uBAGDJ,EAAM0C,OAAS,GAAM,SAAC3C,EAAA,EAAD,CAAWC,MAAOA,IAAa,OAG1D,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/movies/Movies.module.css?c186","pages/movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\",\"linkItem\":\"MovieList_linkItem__UQa-L\",\"listItem\":\"MovieList_listItem__vOVoz\",\"imgItem\":\"MovieList_imgItem__U8UaR\",\"titleItem\":\"MovieList_titleItem__OeEHE\",\"subtitleItem\":\"MovieList_subtitleItem__HHlxS\",\"errorImg\":\"MovieList_errorImg__KyhRp\"};","import css from '../MovieList/MovieList.module.css'\nimport {Link,useLocation} from 'react-router-dom'\n\nexport const MovieList = ({films}) => {\n  const location = useLocation();\n\n\n   return ( <ul className={css.movieList}>\n          {films.map(film => (\n            <li key={film.id} className={css.listItem}>\n              <Link to={`/movies/${film.id}`} className={css.linkItem} state={{from: location}}>\n                {film.poster_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n                    alt={film.title}\n                    className={css.imgItem}\n                  ></img>\n                ) : (\n                  <img\n                    className={css.errorImg}\n                    src=\"https://i.gifer.com/C7Gr.gif\"\n                    alt=\"error\"\n                  ></img>\n                )}\n                <h2 className={css.titleItem}>{film.title}</h2>\n                <p className={css.subtitleItem}>\n                  Relase year: {film.release_date}\n                </p>\n              </Link>\n            </li>\n          ))}\n        </ul>)\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Movies_searchForm__RjJqH\",\"inputForm\":\"Movies_inputForm__ZPZ9h\",\"btn\":\"Movies_btn__kuJU3\"};","//import { useEffect } from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from '../../components/Fetch';\nimport {MovieList} from '../../components/MovieList/MovieList'\nimport css from '../movies/Movies.module.css';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [query, setQuery] = useState('');\n  let [queryParams, setQueryParams] = useSearchParams();\n  const lastQuery = queryParams.get('query') ?? '';\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    \n    e.preventDefault();\n    if (!query) {\n      alert('Enter movie');\n      return;\n    }\n    setQueryParams({ query })\n    getSearchMovies(query).then(res => setFilms(res.results));\n    setQuery('');\n  };\n\n  useEffect(() => {\n    if (lastQuery) {\n      getSearchMovies(lastQuery).then(res => setFilms(res.results))\n    }\n}, [lastQuery])\n\n\n  return (\n    <>\n      <form className={css.searchForm} onSubmit={handleSubmit}>\n        <input\n          className={css.inputForm}\n          type=\"text\"\n          name=\"searchQuery\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie...\"\n          value={query}\n          onChange={handleChange}\n        />\n        <button className={css.btn}>Search</button>\n      </form>\n\n      {films.length > 0 ? ( <MovieList films={films} />) : null}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieList","films","location","useLocation","className","css","map","film","to","id","state","from","poster_path","src","alt","title","release_date","useState","setFilms","query","setQuery","useSearchParams","queryParams","setQueryParams","lastQuery","get","useEffect","getSearchMovies","then","res","results","onSubmit","e","preventDefault","alert","type","name","autoComplete","autoFocus","placeholder","value","onChange","target","length"],"sourceRoot":""}